package vista.creacionPDespacho;

import java.time.LocalTime;
import java.util.Calendar;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.swing.table.DefaultTableModel;
import model.Bus;
import model.Ruta;
import planilla.CrearPlanilla;

public class CreaciónPDespacho extends javax.swing.JFrame {

    int mes;
    String[] namesOfDays = {"","Domingo","Lunes","Martes","Miercoles","Jueves","Viernes","Sabado"};
    Calendar cal;
    private EntityManagerFactory emf;
    private EntityManager em;
    private EntityTransaction tx;
    List<Bus> busesLista;
    int[] buses;
    List<Ruta> rutas;
    String[] nombresRutas;
    
    public CreaciónPDespacho() {
        emf = Persistence.createEntityManagerFactory("TransvallePU");
        em = emf.createEntityManager();
        tx = em.getTransaction();
        cal = Calendar.getInstance();
        mes = 0;
        initComponents();                
        setLocationRelativeTo(null); // centrar ventana
        rutas = em.createNamedQuery("Ruta.findAll").getResultList();
        nombresRutas = new String[rutas.size() + 1];
        nombresRutas[0]="";
        for (int i = 1; i < nombresRutas.length; i++) {
            nombresRutas[i] = rutas.get(i-1).getNombre();
            System.out.println(nombresRutas[i]);
        }
        llenarTabla(mes, nombresRutas);  //llena tabla con dias del mes        
                
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDespacho = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        meses = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setTitle("Gstión de Planillas de Despacho");

        tablaDespacho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Ruta", null, null, null, null, null, null, null, null, null, null, null, null},
                {"Hora", null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Día", "", "", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaDespacho.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tablaDespacho);

        jScrollPane2.setViewportView(jScrollPane1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        meses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        meses.setBorder(null);
        meses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesesItemStateChanged(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Ver Planilla ");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGap(413, 413, 413)
                .addComponent(meses, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meses, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mesesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesesItemStateChanged
        
    }//GEN-LAST:event_mesesItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mes = meses.getSelectedIndex();
        llenarTabla(mes, nombresRutas);
        System.err.println(mes);
    }//GEN-LAST:event_jButton1ActionPerformed

    private int[][] datosTabla(){
        buses = new int[15];
        buses[0] = 0;
        busesLista = em.createNamedQuery("Bus.findAll").getResultList();
         
        for (int i = 1; i < 15; i++) {
            buses[i] = Integer.parseInt(busesLista.get(i).getVial());
        }
        
        
        CrearPlanilla planilla = new CrearPlanilla();
        int[][] mat = planilla.planillaDespacho(buses, ERROR, mes+1);
       
       int[][] copia = new int[mat[0].length][mat.length];  //14 filas y 31 columnas
        
        for (int i = 0; i < copia.length; i++) {
            for (int j = 0; j < copia[i].length; j++) {
                copia[i][j] = mat[j][i];
                System.out.print(copia[i][j] + " ");                
            }
            System.out.print("\n");
        }
        
        return copia;
    }
    private void addFilas(DefaultTableModel model, int[][] viales){
        LocalTime hora = LocalTime.of(5, 0);
        Object[] o = new Object[viales[0].length];
        
        for (int i = 1; i < 15; i++) {
            hora = hora.plusMinutes(7);
            o[0] = hora.toString();
            for (int j = 1; j < o.length; j++) {
                o[j] = viales[i][j];
            }
            model.addRow(o);
        }
    }
    
    private void llenarTabla(int mes, String[] nombresRutas){
        cal.set(Calendar.MONTH, mes);  // mes del calendar febrero
        cal.set(Calendar.DAY_OF_MONTH, 1);  // dia uno  del calendar
        String[] a = new String[31];
        int maxDay = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
        for (int i = 1; i <= maxDay; i++) {
            cal.set(Calendar.DAY_OF_MONTH, i );
            int diaSemana = cal.get(Calendar.DAY_OF_WEEK);
            switch (diaSemana) {
                case 1:                    
                    a[i-1] = namesOfDays[1] + " "+ i;
                    break;
                case 2:
                    a[i-1] = namesOfDays[2] + " "+ i;
                    break;
                case 3:
                    a[i-1] = namesOfDays[3] + " "+ i;
                    break;
                case 4:
                    a[i-1] = namesOfDays[4] + " "+ i;
                    break;
                case 5:
                    a[i-1] = namesOfDays[5] + " "+ i;
                    break;
                case 6:
                    a[i-1] = namesOfDays[6] + " "+ i;
                    break;
                case 7:
                   a[i-1] = namesOfDays[7] + " "+ i;
                    break;
            }           
        }
        String[] fila = new String[a.length+1];
        fila[0]="Día";
        for (int i = 1; i < fila.length; i++) {
            fila[i]= a[i-1];
        }
        Object[] d = new Object[fila.length];
        d[0] = "RUTA";
        int i=0, j=1;
        do {
if (j== nombresRutas.length) {
             j=1;   
            }            
            
d[i] = nombresRutas[j];
i++;            
            j++;
            if (i== d.length) {
                i--;
            }
            
            
            
        } while (d[i] == null);
        
        
        
        
        Object[] hora = new Object[fila.length];
        hora[0] = "HORA";       // la primera columna es hora
        DefaultTableModel model = new DefaultTableModel(new Object[0][0], fila);           
        model.addRow(d);        // add fila al modelo de la tabla
        model.addRow(hora);        
        tablaDespacho.setModel(model);
        
        addFilas(model, datosTabla());
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> meses;
    private javax.swing.JTable tablaDespacho;
    // End of variables declaration//GEN-END:variables
}
